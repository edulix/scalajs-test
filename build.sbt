enablePlugins(SbtWeb)
enablePlugins(ScalaJSPlugin)
addCompilerPlugin("org.scalamacros" % "paradise" % "2.1.0" cross CrossVersion.full)

resolvers += "releases" at "http://nexus.delivery.realestate.com.au/nexus/content/repositories/releases"

libraryDependencies += "com.thoughtworks.binding" %%% "dom" % "1.0.5"
libraryDependencies += "com.lihaoyi" %% "utest" % "0.4.3" % "test"

val js = project.in(file("."))

scalaVersion in ThisBuild := "2.11.7"

testFrameworks += new TestFramework("utest.runner.Framework")


// val web = taskKey[Seq[File]]("JavaScript files generated by Scala.js")

// web := {
//   val jsFile = (fastOptJS in js in Compile).value.data
//   val destinationFile = (sourceManaged in Assets).value / jsFile.getName
//   IO.copyFile(jsFile, destinationFile)
//   Seq(destinationFile)
// }
//
// resourceGenerators in Assets <+= web
//
// resourceGenerators in Assets <+= Def.task[Seq[File]] {
//   val jsFile = (fastOptJS in js in Compile).value.data
//   val mapFile = jsFile.getParentFile / s"${jsFile.getName}.map"
//   val destinationFile = (sourceManaged in Assets).value / mapFile.getName
//   IO.copyFile(mapFile, destinationFile)
//   Seq(destinationFile)
// }
//
// resourceGenerators in Assets <+= Def.task[Seq[File]] {
//   val base = (sourceManaged in Assets).value
//   val indexHtml = base / "index.html"
//   IO.writeLines(
//     indexHtml,
//     Seq(
//       "<!DOCTYPE html>",
//       xml.Xhtml.toXhtml(<html>
//         <head>
//           {for {
//           jsFile <- web.value
//         } yield {
//           <script type="text/javascript" src={jsFile.getName}></script>
//         }}
//         </head>
//         <body>
//           <script type="text/javascript">
//             org.nvotes.results.Main().main()
//           </script>
//         </body>
//       </html>)))
//   Seq(indexHtml)
// }
//
